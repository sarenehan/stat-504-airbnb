nrow(snake)-2
sigma2 <- RSS/(nrow(snake)-2)
x.bar <- mean(snake$X)
SYY <- sum((snake$Y - mean(snake$Y))^2)
SXY <- sum((snake$X - mean(snake$X))*(snake$Y - mean(snake$Y)))
SXX <- sum((snake$X - mean(snake$X))^2)
RSS <- SYY - (SXY^2)/SXX
sigma2 <- RSS/(nrow(snake)-2)
SEB1 <- sigma2/(SXX^(1/2))
SEB0 <- sigma2*((1/nrow(snake)+(x.bar^2)/SXX)^(1/2))
r2 <- (SXY^2)/(SXX*SYY)
x.bar <- mean(snake$X)
y.bar <- mean(snake$Y)
SYY <- sum((snake$Y - mean(snake$Y))^2)
SXY <- sum((snake$X - mean(snake$X))*(snake$Y - mean(snake$Y)))
SXX <- sum((snake$X - mean(snake$X))^2)
RSS <- SYY - (SXY^2)/SXX
B1 <- SXY/SXX
B0 <- y.bar - B1*x.bar
SEB1 <- sigma2/(SXX^(1/2))
SEB0 <- sigma2*((1/nrow(snake)+(x.bar^2)/SXX)^(1/2))
r2 <- (SXY^2)/(SXX*SYY)
t1.2 <- (B0 - 0)/SEB0
p1.2 <- 2*pt(-abs(t.12), df=nrow(snake)-2)
p1.2 <- 2*pt(-abs(t1.2), df=nrow(snake)-2)
t1.3 <- (B1-0)/SEB1
p1.3 <- 2*pt(-abs(t1.3), df=nrow(snake)-2)
((SXY^2)/SXX)/sigma2
B1/SEB1
(B1/SEB1)^2
(SXY^2)/SXX
RSS <- SYY - (SXY^2)/SXX
RSS
1.553^2
SXX^(1/2)
sqrt(SXX)
x.bar <- mean(snake$X)
y.bar <- mean(snake$Y)
SYY <- sum((snake$Y - mean(snake$Y))^2)
SXX <- sum((snake$X - mean(snake$X))^2)
RSS <- SYY - (SXY^2)/SXX
B1 <- SXY/SXX
B0 <- y.bar - B1*x.bar
sigma2 <- RSS/(nrow(snake)-2)
SEB0 <- sqrt(sigma2)*sqrt(1/nrow(snake)+(x.bar^2)/SXX)
covB1B0 <- -sigma2*(x.bar/SXX)
t1.2 <- (B0 - 0)/SEB0
p1.2 <- 2*pt(-abs(t1.2), df=nrow(snake)-2)
t1.3 <- (B1-0)/SEB1
p1.3 <- 2*pt(-abs(t1.3), df=nrow(snake)-2)
((SXY^2)/SXX)/sigma2
SYY - (SXY^2)/SXX
(SXY^2)/SXX
((SXY^2)/SXX)/sigma
((SXY^2)/SXX)/sigma2
summary(test)
resid(test)
sqrt(SXX)
sqrt(sigma2)
B1/SEB1
RSS/15
t1.3^2
sqrt(101.2)
snake$X - x.bar
(snake$X - x.bar)*(snake$Y - y.bar)
test
test$residuals
test$df.residual
SYY <- sum((snake$Y - y.bar)*(snake$Y - y.bar))
SXY <- sum((snake$X - x.bar)*(snake$Y - y.bar))
SXX <- sum((snake$X - x.bar)*(snake$X - x.bar))
B1 <- SXY/SXX
B0 <- y.bar - B1*x.bar
t1.2 <- (B0)/SEB0
SEB1 <- sigma2/(sqrt(SXX))
SEB1 <- sigma2/(sqrt(SXX))
SEB1 <- sqrt(sigma2)/(sqrt(SXX))
SEB0 <- sqrt(sigma2)*sqrt(1/nrow(snake)+(x.bar^2)/SXX)
x.bar <- mean(snake$X)
y.bar <- mean(snake$Y)
SXY <- sum((snake$X - x.bar)*(snake$Y - y.bar))
SXX <- sum((snake$X - x.bar)*(snake$X - x.bar))
B1 <- SXY/SXX
B0 <- y.bar - B1*x.bar
sigma2 <- RSS/(15)
SEB1 <- sqrt(sigma2)/(sqrt(SXX))
SEB0 <- sqrt(sigma2)*sqrt(1/nrow(snake)+(x.bar^2)/SXX)
covB1B0 <- -sigma2*(x.bar/SXX)
t1.2 <- (B0)/SEB0
p1.2 <- 2*pt(-abs(t1.2), df=15)
t1.3 <- (B1)/SEB1
p1.3 <- 2*pt(-abs(t1.3), df=15)
summary(test)
lm.snake <- lm(snake$Y~snake$X)
lm.snake0 <- lm(snake$Y~0+snake$X)
summary(lm.snake0)
summary(lm.snake)
sqrt(sigma2)
summary(lm.snake0)
lm.snake0$coefficients
lm.snake0$coefficients[1]
lm.snake0$fitted.values
lm.snake0$terms
summary(lm.snake0)
qt(1,1)
qt(.975,2)
qt(.975,1000)
qt(.975,15)
plot(lm.snake0)
plot(lm.snake0)[1]
plot(lm.snake0,which=1)
plot(lm.snake0,which=1)
library(ggplot2)
library(dplyr)
library(alr4)
df.data <- read.csv('hw2listings.csv',header = TRUE)
mean(df.data$review_scores_rating)
df.data$review_scores_rating
mean(df.data$review_scores_rating, na.rm = TRUE)
n <- 40
set.seed(343)
x1<-rnorm(n)
x2<-2-3*x1
y<-rnorm(n,mean=4+x1+x2,sd=1)
lm.1<-lm(y~x1+x2)
summary(lm.1)
lm.1.2 <- lm(y~x2+x1)
summary(lm.1.2)
n <- 40
set.seed(343)
x1<-rnorm(n)
x2<-2-3*x1
y<-rnorm(n,mean=4+x1+x2,sd=1)
lm.1<-lm(y~x1+x2)
summary(lm.1)
lm.1.2 <- lm(y~x2+x1)
summary(lm.1.2)
n <- 40
set.seed(101)
x1<-rnorm(n)
x2<-2-3*x1
x2.err<-x2 + runif(n, min=-0.01, max=0.01)
y4<-rnorm(n,mean=4+x1+x2.err, sd=1)
lm.4<-lm(y4~x1+x2.err)
summary(lm.4)
n <- 40
set.seed(101)
x1<-rnorm(n)
x2<-2-3*x1
x2.err<-x2 + runif(n, min=-0.01, max=0.01)
y4<-rnorm(n,mean=4+x1+x2.err, sd=1)
lm.4<-lm(y4~x1+x2.err)
summary(lm.4)
dm.lm4 <- model.matrix((lm.4))
lm.lm4.values <- eigen(t(dm.lm4)%*%lm.lm4)$values
dm.lm4.values <- eigen(t(dm.lm4)%*%lm.lm4)$values
dm.lm4.values <- eigen(t(dm.lm4)%*%dm.lm4)$values
dm.lm4.values
library(alr4)
df.p1 <- BGSgirls
lm1.2 <- lm(Soma~LG9+WT9,data=df.p1)
lm1.3 <- lm(Soma~LG9,data=df.p1)
pairs(~Soma+LG9+WT9,data=df.p1, main="Multiple Scatterplot Matrix")
library(alr4)
df.p1 <- BGSgirls
lm1.2 <- lm(Soma~LG9+WT9,data=df.p1)
lm1.3 <- lm(Soma~LG9,data=df.p1)
pairs(~Soma+LG9+WT9,data=df.p1, main="Multiple Scatterplot Matrix")
avPlots(lm1.2, ~WT9)
library(alr4)
df.p1 <- BGSgirls
lm1.2 <- lm(Soma~LG9+WT9,data=df.p1)
lm1.3 <- lm(Soma~WT9+LG9,data=df.p1)
aov1.4 <- anova(lm1.2)
aov1.5 <- anova(lm1.2)
summary(aov1.4)
aov1.4
aov1.5
aov1.5 <- anova(lm1.3)
aov1.5
aov1.5
avPlots(lm1.2, ~WT9)
aov1.4
set.seed(102)
x1 <- runif(60,min=-1,max=6)
x2 <- rbinom(60,size=3,prob=0.7)
set.seed(102)
x1 <- runif(60,min=-1,max=6)
x2 <- rbinom(60,size=3,prob=0.7)
error <- rnorm(60, mean = 0, sd = 1)
y <- 3-1.7*x1+error
plot(x1,y)
avPlots(lm1.2, ~WT9, main="Added")
avPlots(lm1.2, ~WT9, main="Added variable plot of Age 9 weight")
avPlots(lm1.2, ~WT9, main="Added variable plot of Age 9 weight")
avPlots(lm1.2, ~WT9, main="Added variable plot of Age 9 weight")
avPlots(lm1.2, ~WT9, main="Added variable plot of Age 9 weight")
plot(x1,y, main="Scatter plot of y versus x1")
avPlots(lm(y~x1+x2), ~x1, main="Added variable plot of Age 9 weight")
plot(x1,y, main="Scatter plot of y versus x1")
avPlots(lm(y~x1+x2), ~x1, main="Added variable plot of Age 9 weight")
plot(x1,y, main="Scatter plot of y versus x1")
avPlots(lm(y~x1+x2), ~x1, main="Added variable plot of Age 9 weight")
set.seed(102)
x1 <- runif(60,min=-1,max=6)
x2 <- rbinom(60,size=3,prob=0.7)
error <- rnorm(60, mean = 0, sd = 1)
y <- 3-1.7*x1+error
lm1 <- lm(y~x1+x2)
aov1 <- anova(lm1)
set.seed(102)
x1 <- runif(60,min=-1,max=6)
x2 <- rbinom(60,size=3,prob=0.7)
error <- rnorm(60, mean = 0, sd = 1)
y <- 3-1.7*x1+error
lm1 <- lm(y~x1+x2)
aov2.2 <- anova(lm1)
aov2.2
library(data.table)
library(dplyr)
equalWidth <- function(n, df) {
for (i in 1:n) {
quantile(df, c(seq(0, 1, by=1/n)))[i+1]
df[(df>=quantile(df, c(seq(0, 1, by=1/n)))[i]) & (df<=quantile(df, c(seq(0, 1, by=1/n)))[i+1])] <- i
}
return(df)
}
df.sa <- fread('data\\new\\SA.csv', header = T, sep=',',na.strings=c(""))
df.carrier <- fread('data\\new\\CARRIER.csv', header = T, sep=',',na.strings=c(""))
df.cargo <- fread('data\\new\\CARGO.csv', header = T, sep=',',na.strings=c(""))
df.driver <- fread('data\\new\\DRIVER.csv', header = T, sep=',',na.strings=c(""))
library(data.table)
library(bnlearn)
library(data.table)
library(dplyr)
library(ggplot2)
library(bnlearn)
binNumber <- function(n, df) {#n = bounds low to high
temp = list()
for (i in 1:(length(n)-1)) {
temp[[i]] = which(df >= n[i] & df < n[i+1])
}
n <- 1
for (i in temp) {
df[i] <- n
n <- n +1
}
print(summary(factor(df)))
return(factor(df))
}
MCMIS <- 'D:\\Program File\\Git\\git_projects\\RA\\MCMIS'
setwd(MCMIS) #location of data
df.sa <- fread('data\\new\\SA.csv', header = T, sep=',',na.strings=c(""))
df.insp <- fread('data\\new\\INSP.csv', header = T, sep=',',na.strings=c(""))
df.crash <- fread('data\\new\\CRASH.csv', header = T, sep=',',na.strings=c(""))
df.carrier <- fread('data\\new\\CARRIER.csv', header = T, sep=',',na.strings=c(""))
df.cargo <- fread('data\\new\\CARGO.csv', header = T, sep=',',na.strings=c(""))
df.driver <- fread('data\\new\\DRIVER.csv', header = T, sep=',',na.strings=c(""))
#Missing data and proper data type
df.cargo$CARGO_CLASSIFICATION_ID <- as.factor(df.cargo$CARGO_CLASSIFICATION_ID)
df.carrier$SAFETY_RATING <- as.factor(df.carrier$SAFETY_RATING)
df.carrier$NEW_ENTRANT_CODE <- as.factor(df.carrier$NEW_ENTRANT_CODE)
df.carrier$CARRIER_OPERATION <- as.factor(df.carrier$CARRIER_OPERATION)
df.carrier$MCS150_MILEAGE <- as.integer(df.carrier$MCS150_MILEAGE)
df.driver$AVG_DRIVERS_LEASED_PER_MONTH <- as.integer(df.driver$AVG_DRIVERS_LEASED_PER_MONTH)
df.driver$AVG_DRIVERS_LEASED_PER_MONTH[is.na(df.driver$AVG_DRIVERS_LEASED_PER_MONTH)] <- 0
df.driver$INTERSTATE_WITHIN_100_MILES <- as.integer(df.driver$INTERSTATE_WITHIN_100_MILES)
df.driver$INTERSTATE_WITHIN_100_MILES[is.na(df.driver$INTERSTATE_WITHIN_100_MILES)] <- 0
df.driver$INTERSTATE_BEYOND_100_MILES <- as.integer(df.driver$INTERSTATE_BEYOND_100_MILES)
df.driver$INTERSTATE_BEYOND_100_MILES[is.na(df.driver$INTERSTATE_BEYOND_100_MILES)] <- 0
df.driver$INTRASTATE_WITHIN_100_MILES <- as.integer(df.driver$INTRASTATE_WITHIN_100_MILES)
df.driver$INTRASTATE_WITHIN_100_MILES[is.na(df.driver$INTRASTATE_WITHIN_100_MILES)] <- 0
df.driver$INTRASTATE_BEYOND_100_MILES <- as.integer(df.driver$INTRASTATE_BEYOND_100_MILES)
df.driver$INTRASTATE_BEYOND_100_MILES[is.na(df.driver$INTRASTATE_BEYOND_100_MILES)] <- 0
df.sa$RATING_OVERALL <- as.factor(df.sa$RATING_OVERALL)
df.sa$FACTOR1 <- as.factor(df.sa$FACTOR1)
df.sa$FACTOR2 <- as.factor(df.sa$FACTOR2)
df.sa$FACTOR3 <- as.factor(df.sa$FACTOR3)
df.sa$FACTOR4 <- as.factor(df.sa$FACTOR4)
df.sa$FACTOR5 <- as.factor(df.sa$FACTOR5)
df.sa$FACTOR6 <- as.factor(df.sa$FACTOR6)
df.carrier <- left_join(df.carrier, df.driver, by = 'DOT_NUMBER')
df.carrier <- left_join(df.carrier, df.sa, by='DOT_NUMBER')
df.carrier <- select(df.carrier, -CARRIER_OPERATION, -SAFETY_AUDIT_DATE.x, -SAFETY_AUDIT_ID, -SA_CARRIER_ID, -SAFETY_AUDIT_DATE.y)
df.crash <- group_by(df.crash, DOT_NUMBER) %>% summarise(CRASH=n(), FATALITIES=sum(FATALITIES), INJURIES=sum(INJURIES))
df.carrier <- left_join(df.carrier, df.crash, by='DOT_NUMBER')
df.carrier$CRASH[is.na(df.carrier$CRASH)] <- 0
df.carrier$FATALITIES[is.na(df.carrier$FATALITIES)] <- 0
df.carrier$INJURIES[is.na(df.carrier$INJURIES)] <- 0
df.insp <- group_by(df.insp, DOT_NUMBER) %>% summarise(INSP_TOTAL=n(), VIOL_TOTAL=sum(VIOL_TOTAL), OOS_TOTAL=sum(OOS_TOTAL),
VEHICLE_VIOL_TOTAL=sum(VEHICLE_VIOL_TOTAL), VEHICLE_OOS_TOTAL=sum(VEHICLE_OOS_TOTAL),
DRIVER_VIOL_TOTAL=sum(DRIVER_VIOL_TOTAL), DRIVER_OOS_TOTAL=sum(DRIVER_OOS_TOTAL),
HAZMAT_VIOL_TOTAL=sum(HAZMAT_VIOL_TOTAL), HAZMAT_OOS_TOTAL=sum(HAZMAT_OOS_TOTAL),
TRAFFIC=sum(TRAFFIC_ENF=='Y'), WT=sum(SIZE_WEIGHT_ENF=='Y'),
ALCOHOL=sum(ALCOHOL_CONTROL_SUB=='Y'), DRUG=sum(DRUG_INTRDCTN_SEARCH=='Y'))
df.carrier <- left_join(df.carrier, df.insp, by='DOT_NUMBER')
df.carrier$INSP_TOTAL[is.na(df.carrier$INSP_TOTAL)] <- 0
df.carrier$VIOL_TOTAL[is.na(df.carrier$VIOL_TOTAL)] <- 0
df.carrier$OOS_TOTAL[is.na(df.carrier$OOS_TOTAL)] <- 0
df.carrier$VEHICLE_VIOL_TOTAL[is.na(df.carrier$VEHICLE_VIOL_TOTAL)] <- 0
df.carrier$VEHICLE_OOS_TOTAL[is.na(df.carrier$VEHICLE_OOS_TOTAL)] <- 0
df.carrier$DRIVER_VIOL_TOTAL[is.na(df.carrier$DRIVER_VIOL_TOTAL)] <- 0
df.carrier$DRIVER_OOS_TOTAL[is.na(df.carrier$DRIVER_OOS_TOTAL)] <- 0
df.carrier$HAZMAT_VIOL_TOTAL[is.na(df.carrier$HAZMAT_VIOL_TOTAL)] <- 0
df.carrier$HAZMAT_OOS_TOTAL[is.na(df.carrier$HAZMAT_OOS_TOTAL)] <- 0
df.carrier$TRAFFIC[is.na(df.carrier$TRAFFIC)] <- 0
df.carrier$WT[is.na(df.carrier$WT)] <- 0
df.carrier$ALCOHOL[is.na(df.carrier$ALCOHOL)] <- 0
df.carrier$DRUG[is.na(df.carrier$DRUG)] <- 0
df.cargo <- group_by(df.cargo, DOT_NUMBER) %>% summarise(FOOD=sum(CARGO_CLASSIFICATION_ID %in% c(24,10,18,23)),
PASSENGER=sum(CARGO_CLASSIFICATION_ID %in% c(13)),
GENERAL=sum(CARGO_CLASSIFICATION_ID %in% c(1)),
VEHICLES=sum(CARGO_CLASSIFICATION_ID %in% c(4)),
CONSTRUCTION=sum(CARGO_CLASSIFICATION_ID %in% c(28))
) %>%
group_by(DOT_NUMBER) %>%
summarise(FOOD=ifelse(FOOD>0,1,0),
PASSENGER=ifelse(PASSENGER>0,1,0),
GENERAL=ifelse(GENERAL>0,1,0),
VEHICLES=ifelse(VEHICLES>0,1,0),
CONSTRUCTION=ifelse(CONSTRUCTION>0,1,0)
)
df.carrier <- left_join(df.carrier, df.cargo, by='DOT_NUMBER')
df.carrier <- na.omit(df.carrier)
df.carrier$MCS150_MILEAGE <- df.carrier$MCS150_MILEAGE/df.carrier$DRIVER_TOTAL
df.carrier <- filter(df.carrier, MCS150_MILEAGE <= 300000)
df.carrier$CRASH <- df.carrier$CRASH/(df.carrier$AVG_POWER_UNIT*2)
df.carrier$OOS_TOTAL <- df.carrier$OOS_TOTAL/df.carrier$VIOL_TOTAL
df.carrier$VEHICLE_OOS_TOTAL <- df.carrier$VEHICLE_OOS_TOTAL/df.carrier$VEHICLE_VIOL_TOTAL
df.carrier$DRIVER_OOS_TOTAL <- df.carrier$DRIVER_OOS_TOTAL/df.carrier$DRIVER_VIOL_TOTAL
df.carrier$HAZMAT_OOS_TOTAL <- df.carrier$HAZMAT_OOS_TOTAL/df.carrier$HAZMAT_VIOL_TOTAL
df.carrier$VEHICLE_OOS_TOTAL[is.nan(df.carrier$VEHICLE_OOS_TOTAL)] <- 0
df.carrier$DRIVER_OOS_TOTAL[is.nan(df.carrier$DRIVER_OOS_TOTAL)] <- 0
df.carrier$OOS_TOTAL[is.nan(df.carrier$OOS_TOTAL)] <- 0
df.carrier$HAZMAT_OOS_TOTAL[is.nan(df.carrier$HAZMAT_OOS_TOTAL)] <- 0
df.carrier$FOOD[is.na(df.carrier$FOOD)] <- 0
df.carrier$PASSENGER[is.na(df.carrier$PASSENGER)] <- 0
df.carrier$GENERAL[is.na(df.carrier$GENERAL)] <- 0
df.carrier$VEHICLES[is.na(df.carrier$VEHICLES)] <- 0
df.carrier$CONSTRUCTION[is.na(df.carrier$CONSTRUCTION)] <- 0
df.carrier$FOOD <- factor(df.carrier$FOOD)
df.carrier$PASSENGER <- factor(df.carrier$PASSENGER)
df.carrier$GENERAL <- factor(df.carrier$GENERAL)
df.carrier$VEHICLES <- factor(df.carrier$VEHICLES)
df.carrier$CONSTRUCTION <- factor(df.carrier$CONSTRUCTION)
df.carrier$INTERSTATE_WITHIN_100_MILES <- df.carrier$INTERSTATE_WITHIN_100_MILES/df.carrier$TOTAL_DRIVERS
df.carrier$INTERSTATE_BEYOND_100_MILES <- df.carrier$INTERSTATE_BEYOND_100_MILES/df.carrier$TOTAL_DRIVERS
df.carrier$INTRASTATE_WITHIN_100_MILES <- df.carrier$INTRASTATE_WITHIN_100_MILES/df.carrier$TOTAL_DRIVERS
df.carrier$INTRASTATE_BEYOND_100_MILES <- df.carrier$INTRASTATE_BEYOND_100_MILES/df.carrier$TOTAL_DRIVERS
df.carrier$TOTAL_CDL <- df.carrier$TOTAL_CDL/df.carrier$TOTAL_DRIVERS
df.carrier$TRAFFIC <- ifelse(df.carrier$INSP_TOTAL == 0, 0, df.carrier$TRAFFIC/df.carrier$INSP_TOTAL)
df.carrier$WT <- ifelse(df.carrier$INSP_TOTAL == 0, 0, df.carrier$WT/df.carrier$INSP_TOTAL)
#Reducing data to just needed columns
df.carrier <- select(df.carrier, DOT_NUMBER, AVG_POWER_UNIT, SAFETY_RATING, MCS150_MILEAGE,
NEW_ENTRANT_CODE, TOTAL_DRIVERS, INTERSTATE_WITHIN_100_MILES, INTERSTATE_BEYOND_100_MILES,
INTRASTATE_WITHIN_100_MILES, INTRASTATE_BEYOND_100_MILES, TOTAL_CDL,
RATING_OVERALL, FACTOR1, FACTOR2, FACTOR3, FACTOR4, FACTOR5, FACTOR6,
CRASH, OOS_TOTAL, VEHICLE_OOS_TOTAL, DRIVER_OOS_TOTAL, HAZMAT_OOS_TOTAL,
TRAFFIC, WT, ALCOHOL, DRUG, FOOD, PASSENGER, GENERAL, VEHICLES, CONSTRUCTION)
df.carrier <- df.carrier[!is.nan(df.carrier$INTERSTATE_WITHIN_100_MILES),]
df.carrier <- df.carrier[order(df.carrier$TOTAL_CDL),]
df.carrier$TOTAL_CDL[c(658,659,660)] <- 1
#Discretize data
df.carrier$TRAFFIC <- binNumber(c(0,0.06,0.1890,1.1),df.carrier$TRAFFIC)
df.carrier$WT <- binNumber(c(0,0.06,0.19090,1.1), df.carrier$WT)
df.carrier$ALCOHOL <- factor(ifelse(df.carrier$ALCOHOL>0,2,1))
df.carrier$DRUG <- factor(ifelse(df.carrier$DRUG>0,2,1))
df.carrier$AVG_POWER_UNIT <- binNumber(c(0,3,9,max(df.carrier$AVG_POWER_UNIT)+1),df.carrier$AVG_POWER_UNIT)
df.carrier$MCS150_MILEAGE <- binNumber(c(0,20000,71800,max(df.carrier$MCS150_MILEAGE)+1),df.carrier$MCS150_MILEAGE)
df.carrier$TOTAL_DRIVERS <- binNumber(c(0,3,5,max(df.carrier$TOTAL_DRIVERS)+1),df.carrier$TOTAL_DRIVERS)
#Handle by custom, if 0 should be 0, split rest some way
df.carrier$INTERSTATE_WITHIN_100_MILES <- binNumber(c(0,0.000001,0.1619,1.1),df.carrier$INTERSTATE_WITHIN_100_MILES)
df.carrier$INTERSTATE_BEYOND_100_MILES <- binNumber(c(0,0.000000001,0.8051,1.1),df.carrier$INTERSTATE_BEYOND_100_MILES)
df.carrier$INTRASTATE_WITHIN_100_MILES <- binNumber(c(0,0.01952,1.1),df.carrier$INTRASTATE_WITHIN_100_MILES)
df.carrier$INTRASTATE_BEYOND_100_MILES <- binNumber(c(0,0.0131,1.1),df.carrier$INTRASTATE_BEYOND_100_MILES)
df.carrier$TOTAL_CDL <- binNumber(c(0,.33,.66,1.1),df.carrier$TOTAL_CDL)
df.carrier$CRASH <- binNumber(c(0,.00000000001,0.05,2.1),df.carrier$CRASH)
df.carrier$OOS_TOTAL <- binNumber(c(0,0.00000000001,0.15150,0.21280,1.1),df.carrier$OOS_TOTAL)
df.carrier$VEHICLE_OOS_TOTAL <- binNumber(c(0,0.00000000001,0.1260,0.1965,1.1),df.carrier$VEHICLE_OOS_TOTAL)
df.carrier$DRIVER_OOS_TOTAL <- binNumber(c(0,0.00000000001,0.1538,0.25,1.1),df.carrier$DRIVER_OOS_TOTAL)
df.carrier$HAZMAT_OOS_TOTAL <- binNumber(c(0,0.00000000001,1.1),df.carrier$HAZMAT_OOS_TOTAL)
View(df.carrier)
bn.1 <- hc(df.carrier[,c(4,5,6,7,8,9,10,11,19,20,21,22,23,24,25)])
plot(bn.1)
bn.1 <- hc(df.carrier[,c(19:32)])
plot(bn.1)
bn.1 <- hc(df.carrier[,c(19:23,29:32)])
plot(bn.1)
bn.1 <- hc(df.carrier[,c(2,4,5,19:23,29:32)])
plot(bn.1)
bn.1 <- hc(df.carrier[,c(2,4,5,19:23,29,30)])
plot(bn.1)
bn.1 <- empty.graph(colnames(df.carrier[,-c(1,3,13,32,31,28)]))
#bn.1 <- set.arc(bn.1,"RATING_OVERALL","FACTOR1")
bn.1 <- set.arc(bn.1,"RATING_OVERALL","FACTOR2")
bn.1 <-set.arc(bn.1,"RATING_OVERALL","FACTOR3")
bn.1 <-set.arc(bn.1,"RATING_OVERALL","FACTOR4")
bn.1 <-set.arc(bn.1,"RATING_OVERALL","FACTOR5")
bn.1 <-set.arc(bn.1,"RATING_OVERALL","FACTOR6")
#bn.1 <-set.arc(bn.1,"FACTOR1","AVG_POWER_UNIT")
#bn.1 <-set.arc(bn.1,"FACTOR1","MCS150_MILEAGE")
#bn.1 <-set.arc(bn.1,"FACTOR1","NEW_ENTRANT_CODE")
bn.1 <-set.arc(bn.1,"FACTOR2","TOTAL_DRIVERS")
bn.1 <-set.arc(bn.1,"FACTOR2","TOTAL_CDL")
bn.1 <-set.arc(bn.1,"FACTOR2","INTERSTATE_WITHIN_100_MILES")
bn.1 <-set.arc(bn.1,"FACTOR2","INTERSTATE_BEYOND_100_MILES")
bn.1 <-set.arc(bn.1,"FACTOR2","INTRASTATE_WITHIN_100_MILES")
bn.1 <-set.arc(bn.1,"FACTOR2","INTRASTATE_BEYOND_100_MILES")
bn.1 <-set.arc(bn.1,"FACTOR2","DRIVER_OOS_TOTAL")
bn.1 <-set.arc(bn.1,"FACTOR2","ALCOHOL")
bn.1 <-set.arc(bn.1,"FACTOR2","DRUG")
bn.1 <-set.arc(bn.1,"FACTOR3","GENERAL")
bn.1 <-set.arc(bn.1,"FACTOR3","PASSENGER")
bn.1 <-set.arc(bn.1,"FACTOR3","WT")
bn.1 <-set.arc(bn.1,"FACTOR3","TRAFFIC")
bn.1 <-set.arc(bn.1,"FACTOR4","VEHICLES_OOS_TOTAL")
bn.1 <-set.arc(bn.1,"FACTOR5","HAZMAT_OOS_TOTAL")
bn.1 <-set.arc(bn.1,"FACTOR6","CRASH")
#Interactions
bn.1 <- set.arc(bn.1,"OOS_TOTAL","WT")
bn.1 <- set.arc(bn.1,"OOS_TOTAL","TRAFFIC")
bn.1 <- set.arc(bn.1,"OOS_TOTAL","VEHICLEs_OOS_TOTAL")
bn.1 <- set.arc(bn.1,"OOS_TOTAL","DRIVER_OOS_TOTAL")
bn.1 <- set.arc(bn.1,"VEHICLEs_OOS_TOTAL","CRASH")
bn.1 <- set.arc(bn.1,"TOTAL_DRIVERS","CRASH")
bn.1 <- set.arc(bn.1,"TRAFFIC","CRASH")
bn.1 <- set.arc(bn.1,"AVG_POWER_UNIT","CRASH")
bn.1 <- set.arc(bn.1,"DRIVER_OOS_TOTAL","DRUG")
bn.1 <- set.arc(bn.1,"DRIVER_OOS_TOTAL","ALCOHOL")
bn.1 <- set.arc(bn.1,"DRUG","ALCOHOL")
bn.1 <- set.arc(bn.1,"GENERAL","OOS_TOTAL")
bn.1 <- set.arc(bn.1,"PASSENGER","OOS_TOTAL")
bn.1 <- set.arc(bn.1,"CRASH","PASSENGER")
fitted.bn <- bn.fit(bn.1, data=df.carrier[,-c(1,3,13,32,31,28)])
plot(bn.1)
bn.1
arc.strength(bn.1, data=df.carrier[,-c(1,3,13,32,31,28)])
bn.1 <- empty.graph(colnames(df.carrier[,-c(1,3,13,32,31,28)]))
#bn.1 <- set.arc(bn.1,"RATING_OVERALL","FACTOR1")
bn.1 <- set.arc(bn.1,"RATING_OVERALL","FACTOR2")
bn.1 <-set.arc(bn.1,"RATING_OVERALL","FACTOR3")
bn.1 <-set.arc(bn.1,"RATING_OVERALL","FACTOR4")
bn.1 <-set.arc(bn.1,"RATING_OVERALL","FACTOR5")
bn.1 <-set.arc(bn.1,"RATING_OVERALL","FACTOR6")
#bn.1 <-set.arc(bn.1,"FACTOR1","AVG_POWER_UNIT")
#bn.1 <-set.arc(bn.1,"FACTOR1","MCS150_MILEAGE")
#bn.1 <-set.arc(bn.1,"FACTOR1","NEW_ENTRANT_CODE")
bn.1 <-set.arc(bn.1,"FACTOR2","TOTAL_DRIVERS")
bn.1 <-set.arc(bn.1,"FACTOR2","TOTAL_CDL")
bn.1 <-set.arc(bn.1,"FACTOR2","INTERSTATE_WITHIN_100_MILES")
bn.1 <-set.arc(bn.1,"FACTOR2","INTERSTATE_BEYOND_100_MILES")
bn.1 <-set.arc(bn.1,"FACTOR2","INTRASTATE_WITHIN_100_MILES")
bn.1 <-set.arc(bn.1,"FACTOR2","INTRASTATE_BEYOND_100_MILES")
bn.1 <-set.arc(bn.1,"FACTOR2","DRIVER_OOS_TOTAL")
bn.1 <-set.arc(bn.1,"FACTOR2","ALCOHOL")
bn.1 <-set.arc(bn.1,"FACTOR2","DRUG")
bn.1 <-set.arc(bn.1,"FACTOR3","GENERAL")
bn.1 <-set.arc(bn.1,"FACTOR3","PASSENGER")
bn.1 <-set.arc(bn.1,"FACTOR3","WT")
bn.1 <-set.arc(bn.1,"FACTOR3","TRAFFIC")
bn.1 <-set.arc(bn.1,"FACTOR4","VEHICLES_OOS_TOTAL")
bn.1 <-set.arc(bn.1,"FACTOR5","HAZMAT_OOS_TOTAL")
bn.1 <-set.arc(bn.1,"FACTOR6","CRASH")
#Interactions
bn.1 <- set.arc(bn.1,"OOS_TOTAL","WT")
bn.1 <- set.arc(bn.1,"OOS_TOTAL","TRAFFIC")
bn.1 <- set.arc(bn.1,"OOS_TOTAL","VEHICLEs_OOS_TOTAL")
bn.1 <- set.arc(bn.1,"OOS_TOTAL","DRIVER_OOS_TOTAL")
bn.1 <- set.arc(bn.1,"VEHICLEs_OOS_TOTAL","CRASH")
bn.1 <- set.arc(bn.1,"TRAFFIC","CRASH")
bn.1 <- set.arc(bn.1,"AVG_POWER_UNIT","CRASH")
bn.1 <- set.arc(bn.1,"DRIVER_OOS_TOTAL","DRUG")
bn.1 <- set.arc(bn.1,"DRIVER_OOS_TOTAL","ALCOHOL")
bn.1 <- set.arc(bn.1,"DRUG","ALCOHOL")
bn.1 <- set.arc(bn.1,"GENERAL","OOS_TOTAL")
bn.1 <- set.arc(bn.1,"PASSENGER","OOS_TOTAL")
bn.1 <- set.arc(bn.1,"CRASH","PASSENGER")
fitted.bn <- bn.fit(bn.1, data=df.carrier[,-c(1,3,13,32,31,28)])
arc.strength(bn.1, data=df.carrier[,-c(1,3,13,32,31,28)])
graphviz.plot(bn.1)
bn.1
View(df.carrier)
setwd('D:\\Program File\\Git\\git_projects\\STATS 504\\ProjectProposal\\stat-504-airbnb\\data')
library(dplyr)
library(knitr)
df.var <- read.table('variables.csv',header=TRUE,sep=',')
df.data <- read.csv('listings.csv',header=TRUE)
df.var <- read.table('\\variables.csv',header=TRUE,sep=',')
df.data <- read.csv('\\listings.csv',header=TRUE)
library(dplyr)
library(knitr)
setwd('D:\\Program File\\Git\\git_projects\\STATS 504\\ProjectProposal\\stat-504-airbnb\\data')
df.var <- read.table('\\variables.csv',header=TRUE,sep=',')
library(dplyr)
library(knitr)
setwd('D:\\Program File\\Git\\git_projects\\STATS 504\\ProjectProposal\\stat-504-airbnb\\data')
df.var <- read.csv('\\variables.csv',header=TRUE,sep=',')
library(dplyr)
library(knitr)
setwd('D:\\Program File\\Git\\git_projects\\STATS 504\\ProjectProposal\\stat-504-airbnb\\data')
df.var <- read.csv('variables.csv',header=TRUE,sep=',')
df.data <- read.csv('listings.csv',header=TRUE)
library(dplyr)
library(knitr)
setwd('D:\\Program File\\Git\\git_projects\\STATS 504\\ProjectProposal\\stat-504-airbnb\\data')
df.var <- read.csv('variables.csv',header=TRUE,sep=',')
df.data <- read.csv('listings.csv',header=TRUE,sep=',')
View(df.data)
df.var <- read.table('variables.csv',header=TRUE,sep=',')
View(df.var)
View(df.var)
summary(df.data$host_total_listings_count)
